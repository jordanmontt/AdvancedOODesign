{
  "title":"About Null Check",
  "subtitle" : "The case of lazy initialization"
  "author" : "S. Ducasse, G. Polito, P. Tesone and L. Fabresse"
}

${slide:title=Use Lazy Initialization when Necessary}$

You can defer initialization of a variable to its first use:

[[[
FreeTypeFont >> descent
   ^ cachedDescent ifNil: [
        cachedDescent := (self face descender * self pixelSize //
                               self face unitsPerEm) negated ]
]]]

- This is only when the method ==descent== is executed that ==cachedDescent== will be initialized.

${slide:title=Solution: Use Lazy Initialization when Necessary}$

- Lazy initialization trades time vs runtime cost (==ifNil:== check)
- You should always use this accessor
- Pay attention you should NOT access directly an instance variable used in a lazy setting 
- Else you can get exposed to ==nil== value

${slide:title=Conclusion}$

- Lazy initialization is another tool at hand
- Don't over use it

