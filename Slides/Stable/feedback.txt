Todo next
========
- In antiif put, the shape slides?
	- 

TODO: 
- Should verify flatten in Basic polymorphism at work
- Shared table discussion
	- lookup
	- analysis of Bloc design

- Global to ...	

- Revisit Double dispatch
	-> discussion
		dices return collection with self (berk)
		conversion asDiceHandle 

- Stone Paper Scissors
	- present better
	- no need for arguments we should say it
	- Table vs: dd

- I would like to have a hot session of xtream coding 
a visitor as guille is doing it from a test.
	
Todo
=====
	
- Parametrized tests
- Layered architecture
- Reify and dispatch

Polymorphism at work
	-> Polymorphism and extension

Should do another pass on
	- CaseStudy-PowerOfDelegationClassDefinitionPrinter
	- CaseStudy-Sokoban-RealExample
	- Global-FromGlobalToParameter
	- Global-TheUglyGlobalVariables
	- SharedPools 
		add pictures
Later 
=====

- case study layout
- remove sharing-two

- redo the not implementation

Now
====
- CaseStudy-TurningAProcIntoAnObject

- Blocks
	- withIndexDo:
	- doWithIndex: 
	- True class
	- Copy the roassal block as last example

- Law of Demeter (mother of distribution)
	Principle of less knowledge
	Tell don't ask
	Level of abstractions
		propagating the same level
	Ask pablo for SDL example
	



With Pavel
=========

Global-FromGlobalToParameter 
	add example using Transcript 
	
About Registration
	- recall a bit the story about class side method are late bound
	- mention that classes are static and that objects could be registered too.
	
Avoid hardcoding classes
	- simplify the message
	- focus on parameter tests
	- Then another message is do not duplicate logic, factor it. 
	
AntiIf
	- if you are forced to return nil indicate it in the selector
	- null objects may be hard to introduce

Basic-ConditionalToPolymorphism
	- OOP
	- CaseOf -> polymorphism
	- CaseOf are good to avoid calls
	
Polymorphism at work
	- Should revise

Blocks vs. Objects
	- Living block may lose its binding with its source
	- Better withAll,....
	- Calling the hook from the block

ReifyAndDispatch
	- add diagr
	- the class document knew the parser
	- the input document knows the parser
	
Class vs. InstanceHook
	- 

Idea 
	Extend Object or not. Avoid. 
	cull: reflective


About Symbols and values
	- 
	- 
	
Numbers and polymorphism


New ideas Classes vs. Objects

http://www.eli.sdsu.edu/courses/spring01/cs635/notes/
Visitors1
	
Visitor 2
	- distributed recursive function
	
Commander2 as a case study

Test to understand and record,


Registration with a cache
	+ how do invalidate the cache
	+ worldmenu
	+ weak registration

Visitor
	- pre-order (post in)
	- extensibility! how can I add new operations if I don't own the classes
	- What about adding variables! ðŸ˜„

	Extend this to graphs


${columns}$

${column:width=60}$

+>file://figures/Point-xy-class-method.png|width=90+

${column:width=40}$

- press the button ==class== to define a class method
- in lectures, we add ==class==

${endColumns}$

[[[
Point class >> x: xInteger y: yInteger 
  "Answer an instance of me with coordinates xInteger and yInteger."

  ^ self basicNew setX: xInteger setY: yInteger
]]]