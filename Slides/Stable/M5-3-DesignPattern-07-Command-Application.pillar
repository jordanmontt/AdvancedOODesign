{
    "title":"Applying Command Design Pattern",
    "subtitle" : "A Glimpse at Commander",
    "slidesid":"M5S3-2"
}

${slide:title=Goals}$

- Command Design Pattern in Action
- Glimpse at Commander: a command framework


${slide:title=Commander: a Command framework}$

+>file://figures/withMenus.png|width=25+

Commander is a little framework for commands using decorators
- Can produce a toolbar or menus
- UI is optional

[[[
(EgAddContactCommand new context: aPresenter) execute
]]]


${slide:title=Core commander}$

+>file://figures/FirstDecorator.pdf|width=80+


${slide:title=Add Contact}$

[[[
EgContactBookCommand << #EgAddContactCommand
	package: 'EgContactBook'
]]]

[[[
CmAddContactCommand >> initialize
	super initialize.
	self
		basicName: 'New contact';
		basicDescription: 'Creates a new contact and add it to the contact
book.'
]]]

${slide:title=Add Contact: Behavior}$

[[[
CmAddContactCommand >> execute
	| contact |
	contact := self contactBookPresenter newContact.
	self hasSelectedContact
		ifTrue: [ self contactBook
					addContact: contact
					after: self selectedContact ]
		ifFalse: [ self contactBook addContact: contact ].
	self contactBookPresenter updateView
]]]



${slide:title=Commander and its decorators}$

+>file://figures/DecoratorWithSpec2.pdf|width=75+


${slide:title=Commander and its decorators}$
[[[
CmCommand >> asSpecCommand
	"Subclasses might override this method to define default icon and shortcut."
	^ self decorateWith: SpCommand
]]]

[[[
StCommand >> asSpecCommand

	| command |
	command := super asSpecCommand 
		iconProvider: self application;
		iconName: self class defaultIconName;
		yourself.
	self class defaultShortcut 
		ifNotNil: [ :keyCombination | command shortcutKey: keyCombination ].
	^ command
]]]


${slide:title=One Command}$

[[[
StCommand << StPlaygroundDoItCommand 
	package: 'NewTools-Playground'
]]]

[[[
StCommand >> execute 
	context doEvaluateAllAndGo
]]]

${slide:title=Conclusion}$

- Commands are first-class actions
- Adapted for manipulation of actions (undo, replay)

