{
	"title":"Test-Driven Development",
	"subtitle":"Getting more out of tests",
	"author":"S. Ducasse"
}


${slide:title=Outline}$

- TDD (Test-Driven Development)
- Example of TDD
- Rethinking it

${slide:title=Write tests first}$

- Write test ""first""! Yes, yes, yes

- "Whenever you are tempted to type something into a print statement or a debugger expression, ""write it as a test instead""" - Martin Fowler


${slide:title=TDD is about the flow}$

# Run ""all"" your tests: 
## they should be ""green""! Else fix it!
# Turn a feature into a test
# Make sure it ""fails"" (yes - failed or error)
# Write some code
# Run ""the"" test - loop until it ""passes"" else goto 4
# Run ""all"" your tests: 
## they should be green! Else fix it!
# Commit
# Think about ""cleaning/refactoring"" - goto 6
# Take a break!


${slide:title=TDD: Write your test}$

- Imagine we just created the class ==Counter==.
- A test for accessing the counter value

[[[
CounterTest >> testCount 
	| c |
	c := Counter new. 
	c count: 10.
	self assert: c count equals: 12
]]]

${slide:title=TDD: Run your test!}$

- It is red (the test produces an error)
-- This is normal since we did not define the methods ==count== and ==count:==.
- So far so good!
- If it is already green this is a bonus and may be your test is not good.

${slide:title=TDD: Make your test pass}$

- Work until your test gets green!
- [When you are lucky, use XTDD and enjoy coding in the debugger] See following lectures.

${slide:title=TDD: Rerun ""all"" the tests}$

- Yes we know, you are super smart BUT ""rerun all your tests""!
- Fix the broken tests
-- Either a test is now ""wrong""
-- Or you broke something else
-- In both cases, you should fix it

${slide:title=TDD: When all the tests are green}$
- Commit and take a break
- Then it is a good time to 
-- ""Refactor"" your code if necessary
-- Revisit your code
-- Rerun ""all"" the tests

${slide:title=Why writing test first?}$

- You specify ""what"" you want to get
- You think ""how you build/assemble"" to get the action done
- In addition you are your first client: strengthen your APIs
- You get a ""clear"" context
- You can debug on the spot

${slide:title=Conclusion}$

- TDD is powerful
- XTDD is literally ""TDD on steriods"" (see following lectures)
- Do not miss XTDD it is gorgeous