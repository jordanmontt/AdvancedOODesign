{
	"title":"TypeObject",
	"slidesid":"M8-6"
}


${slide:title=Goals}$

- Individuals and their description
- Another form of sharing
- TypeObject


${slide:title=Analysing a case}$

- Imagine that you have a cactus collection and you want to manage them. 
- There is a difference between one plant and its kind

Gymnocalycium mihanovichii (a south american well known cactus)

+>file://figures/Gymno.png|width=60+





${slide:title=An individual vs. its description}$

- You can several G. Mihanovichii and each one can be different
- Different flowers, pest attack, ...

+>file://figures/Gymnos.png|width=60+

${slide:title=Still one description of their kind}$

+>file://figures/succu.png|width=60+


${slide:title=Video Rental}$

- There is a difference between a video description and the actual BlueRay you have in your hand.
- The description describes all the RamboIII blueRay
- A given blueray can be scratched and its box broken

+>file://figures/rambo3.png|width=60+


${slide:title=How to implement this?}$

- Should we implement all the description on the class level?
- Should we have a separate class?

${slide:title=All in class level}$

- Putting all the description information at the class level could work
- Cannot change dynamically
- Cannot be shared between different kind of objects

${slide:title=TypeObject}$

- Introduce a TypeObject whose responsibility is to gather description specific properties
- ==PlantDescription== vs ==Plant==

${slide:title=TypeObject}$

- Define instance specific properties in typed object class
- Define instance description specific properties in the ==TypeObject== associated with the typed Object

[[[
Plant
	age, size, lastPestAttack, flowerColor
]]]

[[[
PlantDescription
	otherNames, countries, cultivars
]]]


${slide:title=Dynamic}$

- Depending on your domain, the typed object and TypeObject relationship can be dynamic







${slide:title=Conclusion}$

TypeObject
- makes explicit the relation to the objet description
- can be description-oriented class


