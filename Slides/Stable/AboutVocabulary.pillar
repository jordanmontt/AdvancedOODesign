{
    "title":"About Vocabulary",
    "subtitle":"",
    "author":"S. Ducasse"
}

${slide:title=Goal}$

- Avoid some misunderstanding
- 

${slide:title=The case: Polymorphism}$

- The word "Polymorphism" is overloaded
- Literally, it is strange: having multiple forms :)
- It could mean subtyping: when a class is a subclass of another one.

${slide:title=Our stance}$

"'If it walks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.'"

We use ""polymorphic"", ""polymorphism"" in the sense of
- exposing the same API, 
- substituable,
- an object can be replaced by another one because both present the same API (set of messages),
- polymorphic objects do not have to be subtypes

${slide:title=Conclusion}$

- Looking at object API
- To produce reusable and extensible programs
- Not much as class structural relation (subtyping)

