{
  "title":"Inheritance and Lookup: Self",
  "subtitle":"Understand lookup once for all",
  "slidesid":"M1S4"
}

${slide:title=Goals}$

 Understand:
- Sending a message
- Method lookup
- Semantics of ==self==/==this==

${slide:title=Remember inheritance}$

- Inheritance of ""state"" is ""static"" (done at compile time)
- Inheritance of ""behavior"" is ""dynamic""
- In this lecture we focus on the behavior part

${slide:title=Message sending}$

${columns}$

${column:width=38}$

""Sending"" a ""message"" is a two-step process:
# ""look up"" the ""method"" matching the message
# ""execute"" this method on the ""receiver""

${column:width=62}$

+>file://figures/InheritanceDiagram-sendingMessage.pdf|width=75+

${endColumns}$

${slide:title=Method lookup}$

${columns}$

${column:width=38}$

The lookup starts in the ""class"" of the ""receiver"" then:
- if the method is defined in the class, it is returned
- otherwise the search continues in the superclass

${column:width=62}$

+>file://figures/InheritanceDiagram-lookupTwoStages.pdf|width=70+

${endColumns}$

${slide:title=Some lookup cases}$

${columns}$

${column:width=47}$

Sending the message ==color== to ==aColoredRectangle==

${column:width=53}$

+>file://figures/InheritanceDiagram-lookup-superclass.pdf|width=60+

${endColumns}$

${slide:title=Some lookup cases}$

${columns}$

${column:width=47}$

Sending the message ==area== to ==aColoredRectangle==

${column:width=53}$

+>file://figures/InheritanceDiagram-lookup-superclass.pdf|width=60+

${endColumns}$


${slide:title=About lookup implementation}$

- Most of the time, the result of a lookup is ""cached"" and a lookup happens only once
- In some languages, there are dispatch tables
- The point is that conceptually there is a lookup at execution


${slide:title=What is self/this?}$

${columns}$

${column:width=50}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=80+

${column:width=50}$

- Take 5 min and write the definition of ==self== (==this== in Java)
- Your definition should have two points:
-- what does ==self== represent?
-- how is a method looked up when a message is sent to ==self==?

${endColumns}$





${slide:title=Let us explore a bit}$

${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=100+


${column:width=40}$

- ==aA== is an instance of ==A== (obtained executing ==A new==)
- ==aB== is an instance of ==B== (obtained executing ==B new==)

${endColumns}$

${slide:title=Let us explore a bit}$

${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=100+


${column:width=40}$
[[[
> aA foo
...
>	aB foo
...
]]]

${endColumns}$



${slide:title=self always represents the receiver}$


${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=100+

${column:width=40}$
[[[
>	aA foo
10
> aB foo
50
]]]

${endColumns}$


${slide:title=self always represents the receiver}$

${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=100+

${column:width=40}$

[[[
> aA bar
...
> aB bar
...
]]]

${endColumns}$




${slide:title=self always represents the receiver}$

${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=100+

${column:width=40}$

[[[
> aA bar
10
> aB bar
50
]]]

${endColumns}$

${slide:title=Following message lookup and execution}$

${columns}$

${column:width=40}$

+>file://figures/LookupWithSelfInSuperclassMethod.pdf|width=90+

[[[
> aB bar
50
]]]

${column:width=65}$

Evaluation of ==aB bar==
#==aB=='s class is ==B==
#no method ==bar== in ==B==
#look up in ==A== - ==bar== is found
#method ==bar== is executed
#==self== refers to the receiver ==aB==
#==foo== is sent to ==self==
#look up ==foo== in the ==aB=='s class: ==B==
#==foo== is found there and executed

${endColumns}$

${slide:title=self/this in two sentences}$

- ==self== represents the ""receiver"" of the message
--  ==self== in Pharo, ==this== in Java
- The method lookup ""starts in the class of the receiver""


${slide:title=self always represents the receiver}$

${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethodThreeClasses.pdf|width=90+

${column:width=40}$

[[[
> aA bar
...
> aB bar
...
> aC bar
...
]]]

${endColumns}$

${slide:title=self always represents the receiver}$

${columns}$

${column:width=60}$

+>file://figures/LookupWithSelfInSuperclassMethodThreeClasses.pdf|width=90+

${column:width=40}$

[[[
> aA bar
10
> aB bar
10
> aC bar
50
]]]

${endColumns}$

${slide:title=What you should know}$


- ==self== always represents the receiver
- Sending a message is a ""two-step"" process:
-# ""Look up"" the method matching the message
-# Execute this method ""on the receiver""
- Method lookup maps a message to a method
- Method lookup starts in the ""class of the receiver""
-- ...and goes up in the hierarchy

